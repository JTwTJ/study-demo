//使用以下插件
plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'com.arenagod.gradle.MybatisGenerator' version '1.4'
}

group = 'com.jwt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8' //jvm版本要求

/*
配置仓库地址，从而找到外部依赖
按照你在文件中(build.gradle)仓库的顺序寻找所需依赖(如jar文件)，
如果在某个仓库中找到了，那么将不再其它仓库中寻找
*/
repositories {
    mavenLocal()//本地库
    mavenCentral()
    //阿里云Maven远程仓库 或者可以配公司内部私服地址
    //maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
}

/*
定义依赖：声明项目需要哪些依赖
 */
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //devtools
    implementation 'org.springframework.boot:spring-boot-devtools'

    //jersey
    implementation 'org.springframework.boot:spring-boot-starter-jersey'

    //mysql
    implementation group: 'com.baomidou', name: 'mybatisplus-spring-boot-starter', version: '1.0.5'
    implementation('com.baomidou:mybatis-plus:2.3')
    implementation 'mysql:mysql-connector-java'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    //mybatis
    // Mybatis 代码自动生成所引入的包
    compile(group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.2')

    //lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.2'

    compileOnly 'org.projectlombok:lombok:1.18.2'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

configurations {
    mybatisGenerator
}

mybatisGenerator {
    verbose = true
    configFile = 'src/main/resources/mybatis/generatorConfig.xml'
}

test {
    useJUnitPlatform()
}

bootRun {
    //开启热加载功能
    sourceResources sourceSets.main
}
